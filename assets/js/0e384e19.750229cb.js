"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,g=s["".concat(p,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},59881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return s}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={sidebar_position:1},p="Getting Started",c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Getting Started",description:"Luanoids are an alternative to Roblox Humanoids originally written by LPGhatguy as a 2018 Hack Week project.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/Luanoid/docs/intro",editUrl:"https://github.com/raphtalia/Luanoid/edit/main/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",next:{title:"Custom CharacterControllers",permalink:"/Luanoid/docs/customCharacterControllers"}},u=[{value:"Installation",id:"installation",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"Limitations",id:"limitations",children:[],level:2}],d={toc:u};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Luanoids are an alternative to Roblox Humanoids originally written by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LPGhatguy"},"LPGhatguy")," as a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LPGhatguy/luanoid"},"2018 Hack Week project"),"."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"Luanoid can be installed with ",(0,i.kt)("a",{parentName:"p",href:"https://wally.run"},"Wally")," by adding it to the ",(0,i.kt)("inlineCode",{parentName:"p"},"[dependencies]")," section of your ",(0,i.kt)("inlineCode",{parentName:"p"},"wally.toml")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "your_name/your_project"\nversion = "0.1.0"\nregistry = "https://github.com/UpliftGames/wally-index"\nrealm = "shared"\n\n[dependencies]\nLuanoid = "raphtalia/luanoid@^1"\n')),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Grab an R15 rig or the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/raphtalia/Luanoid/blob/17f8acf15d01ccca7f94599d51ba26c613d9e587/assets/DoguXCV.rbxm"},"UV-wrapped Dogu15 rig in the repository"),"\nand place it in ReplicatedStorage. Then run the example below in a server script and it will create a Luanoid character\nand have it walk somewhere."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal Luanoid = require(ReplicatedStorage.Packages.Luanoid)\n\n-- L15 is used to abbreviate Luanoid R15\nlocal l15 = Luanoid.new()\nl15:SetRig(ReplicatedStorage.DoguXCV:Clone())\nl15.Character.Parent = workspace\n\n-- Currently ApplyDescription() only works while on the server and character is under Workspace\nl15:ApplyDescription(Players:GetHumanoidDescriptionFromUserId(72938051))\nl15.CharacterController:Start()\n\n-- MoveTo() returns a Promise\nif l15:MoveTo(Vector3.new(32, 0, 32)):expect() then\n    print("reached target! :D")\nelse\n    print("failed to reach target :(")\nend\n')),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u2705 - Fully supported"),(0,i.kt)("li",{parentName:"ul"},"\u26a0\ufe0f - Partially supported"),(0,i.kt)("li",{parentName:"ul"},"\ud83d\udd1c - Not yet supported"),(0,i.kt)("li",{parentName:"ul"},"\u274c - Will not be supported")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Feature"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Status"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Accessories"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"Can only be applied on the server")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Packages"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u26a0\ufe0f"),(0,i.kt)("td",{parentName:"tr",align:null},"Can only be applied on the server, Anthro packages will not be skilled properly work due to the lack of a Humanoid")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Clothing"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u26a0\ufe0f"),(0,i.kt)("td",{parentName:"tr",align:null},"See ",(0,i.kt)("a",{parentName:"td",href:"clothingSupport"},"Clothing Support"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Animations"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"Must be loaded first on the server")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Swimming"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\ud83d\udd1c"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Climbing"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\ud83d\udd1c"),(0,i.kt)("td",{parentName:"tr",align:null},'Implementation will likely require climbable Instances to have a "Climbable" ',(0,i.kt)("a",{parentName:"td",href:"https://developer.roblox.com/en-us/api-reference/class/CollectionService"},"tag"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Sitting"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\ud83d\udd1c"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Custom CharacterStates"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\ud83d\udd1c"),(0,i.kt)("td",{parentName:"tr",align:null},"Easier for developers to use their own CharacterStates")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Tools"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u274c"),(0,i.kt)("td",{parentName:"tr",align:null},"At most support for equipping/dequipping tools may be added, any further support would be difficult due to lack of support with non-humanoid characters")))))}s.isMDXComponent=!0}}]);